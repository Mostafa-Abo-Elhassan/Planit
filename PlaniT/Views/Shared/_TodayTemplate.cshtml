@model List<PlaniT.Models.TodayTemplateItem>

<div class="space-y-6">
    <!-- Add New Task Section -->
    <div class="bg-gradient-to-r from-primary/5 to-secondary/5 border-2 border-dashed border-primary/20 hover:border-primary/40 rounded-2xl p-6 transition-all duration-300">
        <div class="flex items-center space-x-4">
            <div class="w-12 h-12 bg-gradient-to-r from-primary to-secondary rounded-xl flex items-center justify-center shadow-lg">
                <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path>
                </svg>
            </div>
            <div class="flex-1">
                <input type="text"
                       id="today-template-input"
                       placeholder="Add a new task to your daily template..."
                       class="w-full px-4 py-3 bg-white border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-200 placeholder-gray-500 focus:-translate-y-0.5 focus:shadow-lg" />
            </div>
            <button id="add-today-template"
                    class="px-6 py-3 bg-gradient-to-r from-primary to-secondary text-white font-semibold rounded-xl hover:shadow-lg transition-all duration-200 hover:scale-105 flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                <span>Add Task</span>
            </button>
        </div>
    </div>

    <!-- Tasks List -->
    <div class="bg-white/90 backdrop-blur-sm rounded-2xl shadow-lg border border-white/50 overflow-hidden">
        @if (Model == null || !Model.Any())
        {
            <!-- Empty State -->
            <div class="flex flex-col items-center justify-center py-16 px-8">
                <div class="w-20 h-20 bg-gradient-to-br from-gray-100 to-gray-200 rounded-full flex items-center justify-center mb-6 shadow-lg">
                    <svg class="w-10 h-10 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"></path>
                    </svg>
                </div>
                <h3 class="text-xl font-bold text-gray-700 mb-2">No Tasks in Template</h3>
                <p class="text-gray-500 text-center max-w-md">Create your daily template by adding tasks that you want to accomplish every day.</p>
            </div>
        }
        else
        {
            <!-- Task Counter Header -->
            <div class="bg-gradient-to-r from-primary/10 to-secondary/10 px-6 py-4 border-b border-gray-100">
                <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-3">
                        <div class="w-8 h-8 bg-gradient-to-r from-primary to-secondary rounded-lg flex items-center justify-center">
                            <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                        <div>
                            <h3 class="text-lg font-semibold text-gray-800">Today's Template</h3>
                            <p class="text-sm text-gray-600">@Model.Count() @(Model.Count() == 1 ? "task" : "tasks") in your daily routine</p>
                        </div>
                    </div>
                    <div class="text-primary font-semibold text-lg">@Model.Count()</div>
                </div>
            </div>

            <!-- Tasks List -->
            <ul id="today-template-list" class="divide-y divide-gray-100">
                @foreach (var item in Model)
                {
                    <li class="group hover:bg-gray-50/80 transition-all duration-200 px-6 py-4">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-4 flex-1">
                                <!-- Task Icon -->
                                <div class="w-3 h-3 bg-gradient-to-r from-primary to-secondary rounded-full flex-shrink-0 shadow-sm"></div>

                                <!-- Editable Task Title -->
                                <span contenteditable="true"
                                      class="template-title flex-1 text-gray-800 font-medium hover:bg-gray-100 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary/30 focus:bg-white transition-all duration-200 cursor-text"
                                      data-id="@item.Id"
                                      data-original="@item.Title">@item.Title</span>
                            </div>

                            <!-- Actions -->
                            <div class="flex items-center space-x-2 opacity-0 group-hover:opacity-100 transition-all duration-200">
                                <!-- Edit Indicator -->
                                <div class="text-xs text-gray-400 font-medium">Click to edit</div>

                                <!-- Delete Button -->
                                <button class="delete-today-template w-8 h-8 bg-red-100 hover:bg-red-200 text-red-600 rounded-lg flex items-center justify-center transition-all duration-200 hover:scale-110"
                                        data-id="@item.Id"
                                        title="Delete task">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                    </svg>
                                </button>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        }
    </div>

    <!-- Help Text -->
    <div class="bg-blue-50/80 border border-blue-200/50 rounded-xl p-4">
        <div class="flex items-start space-x-3">
            <div class="w-5 h-5 text-blue-500 flex-shrink-0 mt-0.5">
                <svg fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                </svg>
            </div>
            <div>
                <h4 class="text-sm font-semibold text-blue-800 mb-1">Template Tips</h4>
                <p class="text-sm text-blue-700">
                    Create your ideal daily routine here. Tasks you add will serve as your template for productive days.
                    Click on any task to edit it inline, or hover to delete.
                </p>
            </div>
        </div>
    </div>
</div>

<!-- Confirmation Modal -->
<div id="templateConfirmModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
    <div class="bg-white rounded-2xl p-6 max-w-md w-full mx-4 shadow-2xl">
        <div class="flex items-center space-x-3 mb-4">
            <div class="w-10 h-10 bg-red-100 rounded-full flex items-center justify-center">
                <svg class="w-5 h-5 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                </svg>
            </div>
            <h3 class="text-lg font-bold text-gray-900">Confirm Deletion</h3>
        </div>
        <p id="templateConfirmMessage" class="text-gray-600 mb-6"></p>
        <div class="flex space-x-3 justify-end">
            <button id="templateCancelAction" class="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors duration-200">
                Cancel
            </button>
            <button id="templateConfirmAction" class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors duration-200">
                Delete
            </button>
        </div>
    </div>
</div>

<script>
    // Global variables to prevent multiple initializations
    window.todayTemplateManager = window.todayTemplateManager || {
        initialized: false,
        pendingAction: null,
        isProcessing: false
    };

    $(document).ready(function() {
        // Prevent multiple initializations
        if (window.todayTemplateManager.initialized) {
            return;
        }
        window.todayTemplateManager.initialized = true;

        // Show confirmation modal
        function showTemplateConfirmModal(message, callback) {
            $('#templateConfirmMessage').text(message);
            $('#templateConfirmModal').removeClass('hidden');
            window.todayTemplateManager.pendingAction = callback;
        }

        // Hide confirmation modal
        function hideTemplateConfirmModal() {
            $('#templateConfirmModal').addClass('hidden');
            window.todayTemplateManager.pendingAction = null;
        }

        // Modal event handlers - use off/on to prevent duplicate bindings
        $('#templateCancelAction').off('click').on('click', hideTemplateConfirmModal);
        $('#templateConfirmAction').off('click').on('click', function() {
            if (window.todayTemplateManager.pendingAction) {
                window.todayTemplateManager.pendingAction();
            }
            hideTemplateConfirmModal();
        });

        // Close modal on backdrop click
        $('#templateConfirmModal').off('click').on('click', function(e) {
            if (e.target === this) {
                hideTemplateConfirmModal();
            }
        });

        // Enhanced add task functionality with duplicate prevention
        $(document).off('click', '#add-today-template').on('click', '#add-today-template', function () {
            if (window.todayTemplateManager.isProcessing) return;

            const button = $(this);
            const originalContent = button.html();
            const title = $('#today-template-input').val().trim();

            if (!title) {
                showTemplateNotification('Please enter a task', 'error');
                $('#today-template-input').focus().addClass('ring-2 ring-red-500');
                setTimeout(() => $('#today-template-input').removeClass('ring-2 ring-red-500'), 2000);
                return;
            }

            window.todayTemplateManager.isProcessing = true;

            // Loading state
            button.prop('disabled', true).html(`
                <svg class="w-5 h-5 animate-spin" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                <span>Adding...</span>
            `);

            $.ajax({
                url: '/TodayTemplate/Add',
                type: 'POST',
                data: { title: title },
                success: function () {
                    $('#today-template-input').val('').removeClass('ring-2 ring-red-500');
                    showTemplateNotification('Task added to template!', 'success');
                    reloadTodayTemplate();
                },
                error: function (xhr) {
                    console.error('Add failed:', xhr.responseText);
                    showTemplateNotification('Failed to add task. Please try again.', 'error');
                },
                complete: function() {
                    button.prop('disabled', false).html(originalContent);
                    window.todayTemplateManager.isProcessing = false;
                }
            });
        });

        // Enhanced delete functionality with confirmation
        $(document).off('click', '.delete-today-template').on('click', '.delete-today-template', function () {
            const id = $(this).data('id');
            const taskElement = $(this).closest('li');
            const taskTitle = taskElement.find('.template-title').text().trim();

            showTemplateConfirmModal(`Are you sure you want to delete "${taskTitle}" from your template?`, function() {
                $.ajax({
                    url: '/TodayTemplate/Delete',
                    type: 'POST',
                    data: { id: id },
                    success: function() {
                        showTemplateNotification('Task removed from template!', 'success');
                        reloadTodayTemplate();
                    },
                    error: function (xhr) {
                        console.error('Delete failed:', xhr.responseText);
                        showTemplateNotification('Failed to delete task. Please try again.', 'error');
                    }
                });
            });
        });

        // Enhanced inline editing with visual feedback - prevent duplicate bindings
        $(document).off('focus', '.template-title').on('focus', '.template-title', function() {
            $(this).addClass('ring-2 ring-primary/30 bg-white shadow-sm');
            $(this).data('original', $(this).text().trim());
        });

        $(document).off('blur', '.template-title').on('blur', '.template-title', function () {
            if (window.todayTemplateManager.isProcessing) return;

            const element = $(this);
            const id = element.data('id');
            const newTitle = element.text().trim();
            const originalTitle = element.data('original');

            element.removeClass('ring-2 ring-primary/30 bg-white shadow-sm');

            if (!newTitle) {
                showTemplateNotification('Task cannot be empty', 'error');
                element.text(originalTitle);
                return;
            }

            if (newTitle === originalTitle) return; // No change

            window.todayTemplateManager.isProcessing = true;

            // Visual feedback during save
            element.addClass('opacity-50 pointer-events-none');

            $.ajax({
                url: '/TodayTemplate/Edit',
                type: 'POST',
                data: {
                    id: id,
                    title: newTitle
                },
                success: function() {
                    showTemplateNotification('Task updated successfully!', 'success');
                    element.removeClass('opacity-50 pointer-events-none');
                },
                error: function (xhr) {
                    console.error('Edit failed:', xhr.responseText);
                    showTemplateNotification('Failed to update task. Please try again.', 'error');
                    element.text(originalTitle);
                    element.removeClass('opacity-50 pointer-events-none');
                },
                complete: function() {
                    window.todayTemplateManager.isProcessing = false;
                }
            });
        });

        // Enter key support for adding tasks
        $(document).off('keypress', '#today-template-input').on('keypress', '#today-template-input', function(e) {
            if (e.which === 13 && !window.todayTemplateManager.isProcessing) {
                $('#add-today-template').click();
            }
        });

        // Enter key support for inline editing
        $(document).off('keypress', '.template-title').on('keypress', '.template-title', function(e) {
            if (e.which === 13) {
                e.preventDefault();
                $(this).blur();
            }
        });

        // Escape key to cancel editing
        $(document).off('keydown', '.template-title').on('keydown', '.template-title', function(e) {
            if (e.which === 27) { // Escape key
                $(this).text($(this).data('original')).blur();
            }
        });
    });

    // Global function to reload today template
    window.reloadTodayTemplate = function() {
        $('#today-template-section').load('/TodayTemplate/Get', function (response, status, xhr) {
            if (status === 'error') {
                console.error('Reload failed:', xhr.responseText);
                showTemplateNotification('Failed to reload template. Please refresh the page.', 'error');
            }
        });
    };

    // Global function for template notifications
    window.showTemplateNotification = function(message, type) {
        // Remove any existing notifications first
        $('.template-notification').remove();

        const bgColor = type === 'success' ? 'bg-emerald-500' : 'bg-red-500';
        const iconPath = type === 'success'
            ? '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>'
            : '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>';

        const notification = $(`
            <div class="template-notification fixed top-4 right-4 ${bgColor} text-white px-6 py-3 rounded-lg shadow-lg z-50 transform translate-x-full transition-transform duration-300">
                <div class="flex items-center space-x-2">
                    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                        ${iconPath}
                    </svg>
                    <span>${message}</span>
                </div>
            </div>
        `);

        $('body').append(notification);

        // Show notification
        setTimeout(() => notification.removeClass('translate-x-full'), 100);

        // Hide notification after 3 seconds
        setTimeout(() => {
            notification.addClass('translate-x-full');
            setTimeout(() => notification.remove(), 300);
        }, 3000);
    };
</script>